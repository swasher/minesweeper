"""
–°–ª–æ–π –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏ –º–µ–∂–¥—É –ª–æ–≥–∏–∫–æ–π –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π —Å–∞–ø–µ—Ä–∞.

–í –¥—Ä—É–≥–∏–µ –º–æ–¥—É–ª–∏ –Ω—É–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ —ç–∫–∑–µ–º–ø–ª—è—Ä, –∞ —Å–∞–º –∫–ª–∞—Å—Å Board, - –ù–ê –î–ê–ù–ù–´–ô –ú–û–ú–ï–ù–¢ BOARD –ù–ï –†–ï–ê–õ–ò–ó–û–í–ê–ù
–∏ –∏–∑ –Ω–µ–≥–æ –±—Ä–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ.

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π —Å–ª–µ–¥—É—é—â–∏–µ –æ–±—ä–µ–∫—Ç—ã Asset –∏ –∏—Ö —Å–ø–∏—Å–∫–∏:
- —è—á–µ–π–∫–∏ - –≤—Å–µ —Ç–∏–ø—ã —è—á–µ–µ–∫, –º–æ–∂–Ω–æ —Å—Å—ã–ª–∞—Ç—å—Å—è –∫–∞–∫ "if cell.asset == asset.bomb"
- —Å–ø–∏—Å–∫–∏ —è—á–µ–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ "if cell in digits"
- red_digits - (—Å–ø–∏—Å–æ–∫) –ö—Ä–∞—Å–Ω—ã–µ –±—É–∫–≤—ã —á–∞—Å–æ–≤ –∏ —Å—á–µ—Ç—á–∏–∫–∞ –±–æ–º–±
- —Ä–æ–∂–∏—Ü—ã - —Ç—Ä–∏ –≤–∏–¥–∞ —Ä–æ–∂–∏—Ü (smile)
- –¥–≤–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —è—á–µ–π–∫–∏ - noguess –¥–ª—è –∏–≥—Ä—ã –±–µ–∑ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è (minesweeper.online) –∏ there_is_bomb –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–æ–º–±—ã –≤ –∑–∞–∫—Ä—ã—Ç–æ–π —è—á–µ–π–∫–µ –¥–ª—è minesweeper.Tk

–ö–∞–∂–¥—ã–π –∏—Ç–µ–º –≤ —Å–ø–∏—Å–∫–∞—Ö - —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Pattern

---------------

WORK 2560—Ö1440 [Scaling: 1(96dpi), Raw Dpi: 93 (Ratio:1.03)]
–º–∞—Å—à—Ç–∞–± –∫–ª–µ—Ç–∫–∞
10      11x11 px (min size)
20      22—Ö23 px
*22     25—Ö25 px (can be 25x24 or even 24x24)
24      27—Ö27 px
28      32—Ö32 px
60      67x67 px (max size)

HOUSE
–º–∞—Å—à—Ç–∞–± –∫–ª–µ—Ç–∫–∞
22      22x22 px
*24     24x24 px

"""

from pathlib import Path
import cv2 as cv
from config import config


class Asset:
    """
    –¢–∏–ø Asset –∏–Ω–∫–∞–ø—Å—É–ª–∏–µ—Ç —Ä–∞—Å—Ç—Ä–æ–≤–∞–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —è—á–µ–µ–∫ –∏ –¥—Ä—É–≥–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –≤ –æ–±—ä–µ–∫—Ç—ã.
    """
    # ----
    # WARNING!!!!
    # –†–ê–ó–ú–ï–† –ê–°–°–ï–¢–û–í –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –†–ê–ó–ú–ï–†–£ –Ø–ß–ï–ï–ö - –û–ù–ò –ö–†–û–ü–õ–ï–ù–´ –í –†–ê–ó–ú–ï–† –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø!!!
    # –¢–û–õ–¨–ö–û –†–ê–ó–ú–ï–† –Ø–ß–ï–ô–ö–ò CLOSED –Ø–í–õ–Ø–ï–¢–°–Ø –†–ê–ó–ú–ï–†–û–ú –Ø–ß–ï–ï–ö –í –ü–ò–ö–°–ï–õ–Ø–•!!!
    # –ü–û–≠–¢–û–ú–£ –¢–£–¢ –ù–ï –ú–û–ñ–ï–¢ –ë–´–¢–¨ –°–í–û–ô–°–¢–í –®–ò–†–ò–ù–ê-–í–´–°–û–¢–ê –Ø–ß–ï–ô–ö–ò!
    # ----

    # TODO –£ –Ω–∞—Å –∫–∞–∂–¥—ã–π —ç–∫–∑–µ–º–ø—Ä—è—Ä Asset –∏–º–µ–µ—Ç –Ω–µ—Å–≤–æ–π—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–ª—è –Ω–µ–≥–æ –ø–æ–ª—è,
    #      –Ω–∞–ø—Ä–∏–º–µ—Ä, Clock0 –∏–º–µ–µ—Ç –ø–æ–ª—è LAG, border –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –ú–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤ –¥–µ–±–∞–≥–µ.

    # similarity = 0  # possible deprecated

    def __init__(self, name, filename=None, value=None, symbol=None):
        self.name = name
        self.filename = filename
        # self.raster = cv.imread(filename, cv.IMREAD_COLOR)
        self.value = value  # digit for opened cells
        self.symbol = symbol  # if appicable - text represent of cell

    def __repr__(self):
        return '<'+self.name+'>'
    @property
    def raster(self):
        return cv.imread(self.filename, cv.IMREAD_COLOR)




def initialize_assets(custom_path=None):
    """–°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–º–∏ –∞—Å—Å–µ—Ç–∞–º–∏"""
    if custom_path:
        dir_path = Path(custom_path)
    else:
        dir_path = Path(__file__).resolve().parent / config.asset

    assets = {
        'bomb_wrong': Asset('bomb_wrong', dir_path / 'bomb_wrong.png', -1, 'üí£'),
        'bomb_red': Asset('bomb_red', dir_path / 'bomb_red.png', -1, 'üí£'),
        'bomb': Asset('bomb', dir_path / 'bomb.png', -1, 'üí£'),
        'flag': Asset('flag', dir_path / 'flag.png', -2, '‚öë'),
        'closed': Asset('closed', dir_path / 'closed.png', -3, '‚ñ°'),
        'n0': Asset('0', dir_path / '0.png', 0, '¬∑'),
        'n1': Asset('1', dir_path / '1.png', 1, '1'),
        # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Å—Å–µ—Ç—ã
    }

    return assets


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –ù–ï–û–ë–•–û–î–ò–ú–´–• –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞—Å—Å–µ—Ç–∞ - –ø–æ–ª—É—á–∞–µ–º —ç–∫—Å–µ–ø—à–Ω –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ñ–∞–π–ª–∞
pics = ['0.png', '1.png', '2.png', '3.png', '4.png', '5.png', '6.png', '7.png', '8.png',
        'LED_0.png', 'LED_1.png', 'LED_2.png', 'LED_3.png', 'LED_4.png',
        'LED_5.png', 'LED_6.png', 'LED_7.png', 'LED_8.png', 'LED_9.png',
        'closed.png', 'flag.png', 'bomb.png', 'bomb_red.png', 'bomb_wrong.png',
        'face_unpressed.png', 'face_win.png', 'face_lose.png']
if config.allow_noguess:
    # –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ –≤–æ –≤—Å–µ—Ö –Ω–∞–±–æ—Ä–∞—Ö –µ—Å—Ç—å —Ç–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –≤ Minesweeper online
    pics.append('no_guess.png')
for file_name in pics:
    file_path = dir_path / file_name  # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    if not file_path.exists():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        raise Exception(f"{file_name} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

# digits
n0 = Asset('0', dir_path.joinpath('0.png'), 0, '¬∑')
n1 = Asset('1', dir_path.joinpath('1.png'), 1, '1')
n2 = Asset('2', dir_path.joinpath('2.png'), 2, '2')
n3 = Asset('3', dir_path.joinpath('3.png'), 3, '3')
n4 = Asset('4', dir_path.joinpath('4.png'), 4, '4')
n5 = Asset('5', dir_path.joinpath('5.png'), 5, '5')
n6 = Asset('6', dir_path.joinpath('6.png'), 6, '6')
n7 = Asset('7', dir_path.joinpath('7.png'), 7, '7')
n8 = Asset('8', dir_path.joinpath('8.png'), 8, '8')

# other cells
closed = Asset('closed', dir_path.joinpath('closed.png'), None, '√ó')
bomb = Asset('bomb', dir_path.joinpath('bomb.png'), None, '‚öπ')
bomb_red = Asset('bomb_red', dir_path.joinpath('bomb_red.png'), None, 'üí•')
bomb_wrong = Asset('bomb_wrong', dir_path.joinpath('bomb_wrong.png'), None, '‚öê')
flag = Asset('flag', dir_path.joinpath('flag.png'), None, '‚öë')

# –Ω–µ –≤–æ –≤—Å–µ—Ö –∏–≥—Ä–∞—Ö –µ—Å—Ç—å —Ç–∞–∫–∞—è —è—á–µ–π–∫–∞, –Ω–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ–≥–¥–∞
# noguess is dummy for compatible purposes
nuguess_png = dir_path.joinpath('no_guess.png') if config.allow_noguess else None
noguess = Asset('no_guess', nuguess_png, None, 'üïÇ')

# –Ω–µ –≤–æ –≤—Å–µ—Ö –∏–≥—Ä–∞—Ö –µ—Å—Ç—å —Ç–∞–∫–∞—è —è—á–µ–π–∫–∞, –Ω–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ–≥–¥–∞
# –ø–æ–¥ –∑–∞–∫—Ä—ã—Ç–æ–π –∫–ª–µ—Ç–∫–æ–π –Ω–∞—Ö–æ–¥–∏—Å—è –±–æ–º–±–∞ - –¥–ª—è Tk
there_is_bomb_png = dir_path.joinpath('there_is_bomb.png') if config.tk else None
there_is_bomb = Asset('there_is_bomb', there_is_bomb_png, None, '∆°')

# smile
fail = Asset('fail', dir_path.joinpath('face_lose.png'))
win = Asset('win', dir_path.joinpath('face_win.png'))
smile = Asset('smile', dir_path.joinpath('face_unpressed.png'))

# –°–ø–∏—Å–æ–∫ —Ü–∏—Ñ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –Ω–∞ –ø–æ–ª–µ –≤ –ø–æ–¥—Å—á–µ—Ç–µ –±–æ–º–± –∏ —Å–µ–∫—É–Ω–¥
# led_digits = []
# for i in range(10):
#     obj = Asset(f'led_{i}', dir_path.joinpath(f'LED_{i}.png'), i)
#     led_digits.append(obj)

led0 = Asset(f'led_0', dir_path.joinpath(f'LED_0.png'), 0)
led1 = Asset(f'led_2', dir_path.joinpath(f'LED_1.png'), 1)
led2 = Asset(f'led_2', dir_path.joinpath(f'LED_2.png'), 2)
led3 = Asset(f'led_3', dir_path.joinpath(f'LED_3.png'), 3)
led4 = Asset(f'led_4', dir_path.joinpath(f'LED_4.png'), 4)
led5 = Asset(f'led_5', dir_path.joinpath(f'LED_5.png'), 5)
led6 = Asset(f'led_6', dir_path.joinpath(f'LED_6.png'), 6)
led7 = Asset(f'led_7', dir_path.joinpath(f'LED_7.png'), 7)
led8 = Asset(f'led_8', dir_path.joinpath(f'LED_8.png'), 8)
led9 = Asset(f'led_9', dir_path.joinpath(f'LED_9.png'), 9)
led_digits = [led0, led1, led2, led3, led4, led5, led6, led7, led8, led9]


digits = [n1, n2, n3, n4, n5, n6, n7, n8]
open_cells = [n0, n1, n2, n3, n4, n5, n6, n7, n8]
bombs = [bomb, bomb_red, bomb_wrong]
all_cell_types = [closed, n0, n1, n2, n3, n4, n5, n6, n7, n8, flag, bomb, bomb_red, bomb_wrong, noguess, there_is_bomb]


