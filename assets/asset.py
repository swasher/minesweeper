"""
–°–ª–æ–π –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏ –º–µ–∂–¥—É –ª–æ–≥–∏–∫–æ–π –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π —Å–∞–ø–µ—Ä–∞.

–í –¥—Ä—É–≥–∏–µ –º–æ–¥—É–ª–∏ –Ω—É–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ —ç–∫–∑–µ–º–ø–ª—è—Ä, –∞ —Å–∞–º –∫–ª–∞—Å—Å Board, - –ù–ê –î–ê–ù–ù–´–ô –ú–û–ú–ï–ù–¢ BOARD –ù–ï –†–ï–ê–õ–ò–ó–û–í–ê–ù
–∏ –∏–∑ –Ω–µ–≥–æ –±—Ä–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ.

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π —Å–ª–µ–¥—É—é—â–∏–µ –æ–±—ä–µ–∫—Ç—ã Asset –∏ –∏—Ö —Å–ø–∏—Å–∫–∏:
- —è—á–µ–π–∫–∏ - –≤—Å–µ —Ç–∏–ø—ã —è—á–µ–µ–∫, –º–æ–∂–Ω–æ —Å—Å—ã–ª–∞—Ç—å—Å—è –∫–∞–∫ "if cell.asset == asset.bomb"
- —Å–ø–∏—Å–∫–∏ —è—á–µ–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ "if cell in digits"
- red_digits - (—Å–ø–∏—Å–æ–∫) –ö—Ä–∞—Å–Ω—ã–µ –±—É–∫–≤—ã —á–∞—Å–æ–≤ –∏ —Å—á–µ—Ç—á–∏–∫–∞ –±–æ–º–±
- —Ä–æ–∂–∏—Ü—ã - —Ç—Ä–∏ –≤–∏–¥–∞ —Ä–æ–∂–∏—Ü (smile)
- –¥–≤–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —è—á–µ–π–∫–∏ - noguess –¥–ª—è –∏–≥—Ä—ã –±–µ–∑ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è (minesweeper.online) –∏ there_is_bomb –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–æ–º–±—ã –≤ –∑–∞–∫—Ä—ã—Ç–æ–π —è—á–µ–π–∫–µ –¥–ª—è minesweeper.Tk

–ö–∞–∂–¥—ã–π –∏—Ç–µ–º –≤ —Å–ø–∏—Å–∫–∞—Ö - —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Pattern

---------------

WORK 2560—Ö1440 [Scaling: 1(96dpi), Raw Dpi: 93 (Ratio:1.03)]
–º–∞—Å—à—Ç–∞–± –∫–ª–µ—Ç–∫–∞
10      11x11 px (min size)
20      22—Ö23 px
*22     25—Ö25 px (can be 25x24 or even 24x24)
24      27—Ö27 px
28      32—Ö32 px
60      67x67 px (max size)

HOUSE
–º–∞—Å—à—Ç–∞–± –∫–ª–µ—Ç–∫–∞
22      22x22 px
*24     24x24 px

"""

from pathlib import Path
import cv2 as cv
from config import config




# dir_path = Path(__file__).resolve().parent / config.asset


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –ù–ï–û–ë–•–û–î–ò–ú–´–• –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞—Å—Å–µ—Ç–∞ - –ø–æ–ª—É—á–∞–µ–º —ç–∫—Å–µ–ø—à–Ω –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ñ–∞–π–ª–∞

"""

–ü–û–ö–ê –ó–ê–ö–ê–ú–ï–ù–ß–£ –≠–¢–û–¢ –§–£–ù–ö–¶–ò–û–ù–ê–õ –ù–ê –≠–¢–ê–ü–ï –†–ê–§–ê–ö–¢–û–†–ê

pics = ['0.png', '1.png', '2.png', '3.png', '4.png', '5.png', '6.png', '7.png', '8.png',
        'LED_0.png', 'LED_1.png', 'LED_2.png', 'LED_3.png', 'LED_4.png',
        'LED_5.png', 'LED_6.png', 'LED_7.png', 'LED_8.png', 'LED_9.png',
        'closed.png', 'flag.png', 'bomb.png', 'bomb_red.png', 'bomb_wrong.png',
        'face_unpressed.png', 'face_win.png', 'face_lose.png']
if config.allow_noguess:
    # –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ –≤–æ –≤—Å–µ—Ö –Ω–∞–±–æ—Ä–∞—Ö –µ—Å—Ç—å —Ç–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –≤ Minesweeper online
    pics.append('no_guess.png')
for file_name in pics:
    file_path = dir_path / file_name  # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    if not file_path.exists():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        raise Exception(f"{file_name} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

"""

class Asset:
    """
    –¢–∏–ø Asset –∏–Ω–∫–∞–ø—Å—É–ª–∏–µ—Ç —Ä–∞—Å—Ç—Ä–æ–≤–∞–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —è—á–µ–µ–∫ –∏ –¥—Ä—É–≥–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –≤ –æ–±—ä–µ–∫—Ç—ã.
    """
    # ----
    # WARNING!!!!
    # –†–ê–ó–ú–ï–† –ê–°–°–ï–¢–û–í –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –†–ê–ó–ú–ï–†–£ –Ø–ß–ï–ï–ö - –û–ù–ò –ö–†–û–ü–õ–ï–ù–´ –í –†–ê–ó–ú–ï–† –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø!!!
    # –¢–û–õ–¨–ö–û –†–ê–ó–ú–ï–† –Ø–ß–ï–ô–ö–ò CLOSED –Ø–í–õ–Ø–ï–¢–°–Ø –†–ê–ó–ú–ï–†–û–ú –Ø–ß–ï–ï–ö –í –ü–ò–ö–°–ï–õ–Ø–•!!!
    # –ü–û–≠–¢–û–ú–£ –¢–£–¢ –ù–ï –ú–û–ñ–ï–¢ –ë–´–¢–¨ –°–í–û–ô–°–¢–í –®–ò–†–ò–ù–ê-–í–´–°–û–¢–ê –Ø–ß–ï–ô–ö–ò!
    # ----

    # TODO –£ –Ω–∞—Å –∫–∞–∂–¥—ã–π —ç–∫–∑–µ–º–ø—Ä—è—Ä Asset –∏–º–µ–µ—Ç –Ω–µ—Å–≤–æ–π—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–ª—è –Ω–µ–≥–æ –ø–æ–ª—è,
    #      –Ω–∞–ø—Ä–∏–º–µ—Ä, Clock0 –∏–º–µ–µ—Ç –ø–æ–ª—è LAG, border –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –ú–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤ –¥–µ–±–∞–≥–µ.

    # similarity = 0  # possible deprecated

    def __init__(self, name, filename=None, value=None, symbol=None):
        self.name = name
        self.filename = filename
        # self.raster = cv.imread(filename, cv.IMREAD_COLOR)
        self.value = value  # digit for opened cells
        self.symbol = symbol  # if appicable - text represent of cell

    def __repr__(self):
        return '<'+self.name+'>'

    def __hash__(self):
        return hash(self.name)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä—Ç–µ–∂ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ö—ç—à–∞

    def __eq__(self, other):
        if isinstance(other, Asset):
            return self.name == other.name
        return False

    @property
    def raster(self):
        try:
            return cv.imread(self.filename, cv.IMREAD_COLOR)
        except:
            raise Exception(f'Problem reading image. {self.filename}')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –≤ –Ω–∞–±–æ—Ä–µ –∞—Å—Å–µ—Ç–æ–≤ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é value
def find_asset_by_value(asset: set, target_value: int) -> Asset:
    return next((item for item in asset if item.value == target_value), None)


def initialize_assets(custom_path=None):
    """–°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–º–∏ –∞—Å—Å–µ—Ç–∞–º–∏"""
    if custom_path:
        dir_path = Path(__file__).resolve().parent / custom_path
    else:
        dir_path = Path(__file__).resolve().parent / config.asset

    # DEPRECATED
    # there_is_bomb_png = dir_path.joinpath('there_is_bomb.png') if config.tk else None
    # noguess_png = dir_path.joinpath('no_guess.png') if config.allow_noguess else None
    #
    # –Ø –≤ –∏—Ç–æ–≥–µ —Ä–µ—à–∏–ª –ø—Ä–æ—Å—Ç–æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–≥–ª—É—à–∫–∞–º–∏ –∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å –≤—Å–µ–≥–¥–∞

    assets = {
        'n0': Asset('0', dir_path.joinpath('0.png'), 0, '¬∑'),
        'n1': Asset('1', dir_path.joinpath('1.png'), 1, '1'),
        'n2': Asset('2', dir_path.joinpath('2.png'), 2, '2'),
        'n3': Asset('3', dir_path.joinpath('3.png'), 3, '3'),
        'n4': Asset('4', dir_path.joinpath('4.png'), 4, '4'),
        'n5': Asset('5', dir_path.joinpath('5.png'), 5, '5'),
        'n6': Asset('6', dir_path.joinpath('6.png'), 6, '6'),
        'n7': Asset('7', dir_path.joinpath('7.png'), 7, '7'),
        'n8': Asset('8', dir_path.joinpath('8.png'), 8, '8'),

        # other cells
        'closed': Asset('closed', dir_path.joinpath('closed.png'), None, '√ó'),
        'bomb': Asset('bomb', dir_path.joinpath('bomb.png'), None, '‚öπ'),
        'bomb_red': Asset('bomb_red', dir_path.joinpath('bomb_red.png'), None, 'üí•'),
        'bomb_wrong': Asset('bomb_wrong', dir_path.joinpath('bomb_wrong.png'), None, '‚öê'),
        'flag': Asset('flag', dir_path.joinpath('flag.png'), None, '‚öë'),

        'no_guess': Asset('no_guess', dir_path.joinpath('no_guess.png'), None, 'üïÇ'),
        'there_is_bomb': Asset('there_is_bomb', dir_path.joinpath('there_is_bomb.png'), None, '∆°'),

        # smile
        'fail': Asset('fail', dir_path.joinpath('face_lose.png')),
        'win': Asset('win', dir_path.joinpath('face_win.png')),
        'smile': Asset('smile', dir_path.joinpath('face_unpressed.png')),

        'led0': Asset('led_0', dir_path.joinpath('LED_0.png'), 0),
        'led1': Asset('led_1', dir_path.joinpath('LED_1.png'), 1),
        'led2': Asset('led_2', dir_path.joinpath('LED_2.png'), 2),
        'led3': Asset('led_3', dir_path.joinpath('LED_3.png'), 3),
        'led4': Asset('led_4', dir_path.joinpath('LED_4.png'), 4),
        'led5': Asset('led_5', dir_path.joinpath('LED_5.png'), 5),
        'led6': Asset('led_6', dir_path.joinpath('LED_6.png'), 6),
        'led7': Asset('led_7', dir_path.joinpath('LED_7.png'), 7),
        'led8': Asset('led_8', dir_path.joinpath('LED_8.png'), 8),
        'led9': Asset('led_9', dir_path.joinpath('LED_9.png'), 9),
    }

    return assets
